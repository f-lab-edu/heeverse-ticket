<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.heeverse.ticket.domain.mapper.TicketMapper">

    <insert id="insertTicketGrade" parameterType="java.util.List">
        INSERT INTO grade_ticket(
            grade_name,
            ticket_count,
            concert_seq,
            create_datetime
        )
        VALUES
            <foreach item="grade" collection="list" separator=",">
                (
                    #{grade.gradeName},
                    #{grade.ticketCount},
                    #{grade.concertSeq},
                    #{grade.createDateTime}
                )
            </foreach>
    </insert>
    
    <select id="findTicketGrades" parameterType="java.lang.Long"
            resultType="com.heeverse.ticket.domain.entity.GradeTicket">
        SELECT
            seq,
            grade_name,
            ticket_count,
            concert_seq,
            create_datetime
        FROM
            grade_ticket
        WHERE
            concert_seq = #{concertSeq}
    </select>


    <insert id="insertTicket"  useGeneratedKeys="true"
            keyProperty="seq" parameterType="java.util.List">
        INSERT INTO ticket(
            ticket_serial_number,
            grade_name,
            concert_seq,
            create_datetime
        )
        VALUES
            <foreach item="ticket" collection="list" separator=",">
                (
                    #{ticket.ticketSerialNumber},
                    #{ticket.gradeName},
                    #{ticket.concertSeq},
                    #{ticket.createDateTime}
                )
            </foreach>
    </insert>



    <select id="findTickets" parameterType="java.lang.Long"
            resultType="com.heeverse.ticket.domain.entity.Ticket">
        SELECT
            seq,
            ticket_serial_number,
            grade_name,
            concert_seq,
            create_datetime,
            order_seq
        FROM
            ticket
        WHERE
            concert_seq = #{concertSeq}
    </select>

    <select id="findTicketsByTicketSeqList" parameterType="java.util.List"
            resultType="com.heeverse.ticket.domain.entity.Ticket">
        SELECT
            seq,
            ticket_serial_number,
            grade_name,
            concert_seq,
            create_datetime,
            order_seq
        FROM
            ticket
        WHERE
            seq  IN
        <foreach collection="list" item="ticketSeq" separator="," open="(" close=")">
            ${ticketSeq}
        </foreach>
        ;

    </select>


    <select id="countTicket" parameterType="java.lang.Long"
            resultType="int">
        SELECT
            count(seq)
        FROM
            ticket
        WHERE
            concert_seq = #{concertSeq}
    </select>

    <select id="selectForUpdate" parameterType="java.util.List" resultType="java.lang.Long">
        SELECT
            seq
        FROM ticket
        WHERE
            seq  IN
            <foreach collection="list" item="ticketSeq" separator="," open="(" close=")">
                #{ticketSeq}
            </foreach>
        FOR UPDATE
    </select>

   <update id="updateTicketOrderSeq" parameterType="com.heeverse.ticket.dto.persistence.TicketRequestMapperDto">
       UPDATE
        ticket
       SET order_seq = ${ticketOrderSeq}
       WHERE seq IN
       <foreach collection="lockTicketSeqList" item="ticketSeq" separator="," open="(" close=")">
           ${ticketSeq}
       </foreach>
       AND order_seq IS NULL
   </update>

    <select id="getTicketLock" parameterType="java.util.List">
        SELECT *
        FROM ticket
        WHERE seq IN
        <foreach collection="ticketSeqList" item="ticketSeq" separator="," open="(" close=")">
            ${ticketSeq}
        </foreach>
        FOR UPDATE;
    </select>

    <update id="rollbackTicketOrderSeq" parameterType="java.util.List">
        UPDATE
        ticket
        SET order_seq = null
        WHERE seq IN
        <foreach collection="list" item="ticketSeq" separator="," open="(" close=")">
            ${ticketSeq}
        </foreach>
        AND order_seq IS NOT NULL;
    </update>

</mapper>