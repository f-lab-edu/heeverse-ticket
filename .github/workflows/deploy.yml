name: heeverse-deploy

on:
  push:
    branches: [ dev ]
    paths: [ '**.java', '.github/workflows/deploy.yml', 'build.gradle' ]

env:
  RESOURCE_PATH: ./src/main/resources/application-dev.yml
  AWS_PUBLIC_IP: ${{ secrets.AWS_PUBLIC_IP }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}
  AWS_SG_ID: ${{ secrets.AWS_SG_ID }}
  USERNAME: ${{ secrets.USERNAME }}
  KEY: ${{ secrets.KEY }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3.12.0
        with:
          java-version: 17
          distribution: 'temurin'

      - name: Get Github action IP
        id: ip
        uses: haythem/public-ip@v1.2

      - name: Add Github Actions IP to Security group
        run: |
          aws ec2 authorize-security-group-ingress --group-id ${{ env.AWS_SG_ID }} --protocol tcp --port 22 --cidr ${{ steps.ip.outputs.ipv4 }}/32 
          aws ec2 authorize-security-group-ingress --group-id ${{ env.AWS_SG_ID }} --protocol tcp --port 8200 --cidr ${{ steps.ip.outputs.ipv4 }}/32 
          
      - name: Set yaml file
        uses: microsoft/variable-substitution@v1
        with:
          files: ${{ env.RESOURCE_PATH }}
        env:
          vault.uri: localhost
      
      - name: Build with Gradle
        run: |
          chmod +x gradlew
          ./gradlew build -x test

      - name: Deploy to dev server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.AWS_PUBLIC_IP }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          script: |
            cd /home/ubuntu/workspace/heeverse-ticket
            git stash
            git pull origin ${{ github.ref_name }}
            . script/deploy.sh

      - name: Remove Github Actions IP from security group
        run: |
          aws ec2 revoke-security-group-ingress --group-id ${{ env.AWS_SG_ID }} --protocol tcp --port 22 --cidr ${{ steps.ip.outputs.ipv4 }}/32
          aws ec2 revoke-security-group-ingress --group-id ${{ env.AWS_SG_ID }} --protocol tcp --port 8200 --cidr ${{ steps.ip.outputs.ipv4 }}/32
        if: always()

