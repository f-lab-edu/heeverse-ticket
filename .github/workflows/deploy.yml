name: heeverse-deploy

on:
  push:
    branches: [ dev ]
    paths: [ '**.java', '.github/workflows/deploy.yml', 'build.gradle' ]

env:
  # aws
  AWS_PUBLIC_IP: ${{ secrets.AWS_PUBLIC_IP }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}
  AWS_SG_ID: ${{ secrets.AWS_SG_ID }}
  # aws ssh
  USERNAME: ${{ secrets.USERNAME }}
  KEY: ${{ secrets.KEY }}

  # docker hub
  REGISTRY: gutenlee
  IMAGE_NAME: heeverse-ticket-api

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    outputs:
      image-tag: ${{ steps.imagetag.outputs.DOCKER_METADATA_OUTPUT_VERSION }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3.12.0
        with:
          java-version: 17
          distribution: 'temurin'

      - name: Get Github action IP
        id: ip
        uses: haythem/public-ip@v1.3

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Add Github Actions IP to Security group
        run: |
          aws ec2 authorize-security-group-ingress --group-id ${{ env.AWS_SG_ID }} --protocol tcp --port 8200 --cidr ${{ steps.ip.outputs.ipv4 }}/32 

      - name: Run build with Gradle Wrapper
        run: SPRING_PROFILES_ACTIVE=dev-test ./gradlew build

      - name: Remove Github Actions IP from security group
        run: |
          aws ec2 revoke-security-group-ingress --group-id ${{ env.AWS_SG_ID }} --protocol tcp --port 8200 --cidr ${{ steps.ip.outputs.ipv4 }}/32
        if: always()

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # container registry login
      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # image tag 추출
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          flavor: |
            latest=true
          tags: |
            type=sha,format=short

      # image tag output 저장
      - name: Set output
        id: imagetag
        run: echo "DOCKER_METADATA_OUTPUT_VERSION=${{ env.DOCKER_METADATA_OUTPUT_VERSION }}" >> $GITHUB_OUTPUT

      # docker image push
      - name: Build and push Docker image
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max


  deploy:
    needs: build
    runs-on: ubuntu-latest
    env:
      IMAGE_TAG: ${{ needs.build.outputs.image-tag }}
    steps:
      - name: Get Github action IP
        id: ip
        uses: haythem/public-ip@v1.3

      - name: Add Github Actions IP to Security group
        run: |
          aws ec2 authorize-security-group-ingress --group-id ${{ env.AWS_SG_ID }} --protocol tcp --port 22 --cidr ${{ steps.ip.outputs.ipv4 }}/32 

      - name: Deploy to dev server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.AWS_PUBLIC_IP }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          script: |
            set -e
            
            docker ps -q --filter name=${{ env.IMAGE_NAME }} | grep -q . && docker stop ${{ env.IMAGE_NAME }} && docker rm -fv ${{ env.IMAGE_NAME }}
            sudo docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
            docker run -d --rm \
            --name=${{ env.IMAGE_NAME }} \
            -p 8080:8080 \
            --add-host=host.docker.internal:host-gateway \
            -v /home/ubuntu/workspace/heeverse/logs:/workspace/heeverse/logs \
            -v /home/ubuntu/workspace/scouter:/workspace/heeverse/scouter \
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
            

      - name: Remove Github Actions IP from security group
        run: |
          aws ec2 revoke-security-group-ingress --group-id ${{ env.AWS_SG_ID }} --protocol tcp --port 22 --cidr ${{ steps.ip.outputs.ipv4 }}/32
        if: always()
